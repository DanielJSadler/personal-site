@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --cube-size: calc(100vh - 200px);
  --half-cube-size: calc((100vh - 200px) / 2);
}

/* Media query for landscape orientation */
@media (orientation: portrait) {
  :root {
    --cube-size: calc(100vw - 200px); /* Adjust cube size for landscape */
    --half-cube-size: calc(
      (100vw - 200px) / 2
    ); /* Adjust half cube size for landscape */
  }
}

.scene {
  width: var(--cube-size);
  height: var(--cube-size);
  margin: auto;
  perspective: 1000px;
  transition:
    width 1s ease,
    height 1s ease;
}

.scene-fullscreen {
  width: 100vw;
  height: 100vh;
}

.cube {
  width: 100%;
  height: 100%;
  position: relative;
  transform-style: preserve-3d;
  transform: translateZ(calc(var(--half-cube-size) * -1));
  transition:
    transform 1s ease,
    width 1s ease,
    height 1s ease;
}

.is-fullscreen .cube {
  transform: translateZ(calc(100vh / -2));
}

.cube__face {
  position: absolute;
  width: 100%;
  height: 100%;
  text-align: center;
  backface-visibility: hidden;
}

.cube__face--front {
  transform: rotateY(0deg) translateZ(var(--half-cube-size));
}
.cube__face--right {
  transform: rotateY(90deg) translateZ(var(--half-cube-size));
}
.cube__face--back {
  transform: rotateY(180deg) translateZ(var(--half-cube-size));
}
.cube__face--left {
  transform: rotateY(-90deg) translateZ(var(--half-cube-size));
}
.cube__face--top {
  transform: rotateX(90deg) translateZ(var(--half-cube-size));
}
.cube__face--bottom {
  transform: rotateX(-90deg) translateZ(var(--half-cube-size));
}

/* Cube rotation classes */
.cube.show-front {
  transform: translateZ(calc(var(--half-cube-size) * -1)) rotateY(0deg);
}
.cube.show-right {
  transform: translateZ(calc(var(--half-cube-size) * -1)) rotateY(-90deg);
}
.cube.show-back {
  transform: translateZ(calc(var(--half-cube-size) * -1)) rotateY(-180deg);
}
.cube.show-left {
  transform: translateZ(calc(var(--half-cube-size) * -1)) rotateY(90deg);
}
.cube.show-top {
  transform: translateZ(calc(var(--half-cube-size) * -1)) rotateX(-90deg);
}
.cube.show-bottom {
  transform: translateZ(calc(var(--half-cube-size) * -1)) rotateX(90deg);
}

.fade-out {
  animation: fadeOut 0.2s forwards;
}

.fade-in {
  animation: fadeIn 2s forwards;
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
